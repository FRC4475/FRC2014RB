// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4475.Team4475A;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController pIDSubsystemFrontLeftSpeedControllerFrontLeft;
    public static Encoder pIDSubsystemFrontLeftQuadratureEncoderFrontLeft;
    public static SpeedController pIDSubsystemRearLeftSpeedControllerRearLeft;
    public static Encoder pIDSubsystemRearLeftQuadratureEncoderRearLeft;
    public static SpeedController pIDSubsystemFrontRightSpeedControllerFrontRight;
    public static Encoder pIDSubsystemFrontRightQuadratureEncoderFrontRight;
    public static SpeedController pIDSubsystemRearRightSpeedControllerRearRight;
    public static Encoder pIDSubsystemRearRightQuadratureEncoderRearRight;
    public static SpeedController pIDSubsystemArmSpeedControllerArmMotor1;
    public static SpeedController pIDSubsystemArmSpeedControllerArmMotor2;
    public static AnalogChannel pIDSubsystemArmEncoderABSArmPosition;
    public static SpeedController ballFeederSpeedController1;
    public static SpeedController ballFeederSpeedController2;
    public static DoubleSolenoid pneumaticsBallFeederArmPosition;
    public static Compressor pneumaticsMainCompressor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pIDSubsystemFrontLeftSpeedControllerFrontLeft = new Jaguar(1, 1);
	LiveWindow.addActuator("PID Subsystem Front Left", "Speed Controller Front Left", (Jaguar) pIDSubsystemFrontLeftSpeedControllerFrontLeft);
        
        pIDSubsystemFrontLeftQuadratureEncoderFrontLeft = new Encoder(1, 1, 1, 2, false, EncodingType.k4X);
	LiveWindow.addSensor("PID Subsystem Front Left", "Quadrature Encoder Front Left", pIDSubsystemFrontLeftQuadratureEncoderFrontLeft);
        pIDSubsystemFrontLeftQuadratureEncoderFrontLeft.setDistancePerPulse(1.0);
        pIDSubsystemFrontLeftQuadratureEncoderFrontLeft.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDSubsystemFrontLeftQuadratureEncoderFrontLeft.start();
        pIDSubsystemRearLeftSpeedControllerRearLeft = new Jaguar(1, 2);
	LiveWindow.addActuator("PID Subsystem Rear Left", "Speed Controller Rear Left", (Jaguar) pIDSubsystemRearLeftSpeedControllerRearLeft);
        
        pIDSubsystemRearLeftQuadratureEncoderRearLeft = new Encoder(1, 3, 1, 4, false, EncodingType.k4X);
	LiveWindow.addSensor("PID Subsystem Rear Left", "Quadrature Encoder Rear Left", pIDSubsystemRearLeftQuadratureEncoderRearLeft);
        pIDSubsystemRearLeftQuadratureEncoderRearLeft.setDistancePerPulse(1.0);
        pIDSubsystemRearLeftQuadratureEncoderRearLeft.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDSubsystemRearLeftQuadratureEncoderRearLeft.start();
        pIDSubsystemFrontRightSpeedControllerFrontRight = new Jaguar(1, 3);
	LiveWindow.addActuator("PID Subsystem Front Right", "Speed Controller Front Right", (Jaguar) pIDSubsystemFrontRightSpeedControllerFrontRight);
        
        pIDSubsystemFrontRightQuadratureEncoderFrontRight = new Encoder(1, 5, 1, 6, false, EncodingType.k4X);
	LiveWindow.addSensor("PID Subsystem Front Right", "Quadrature Encoder Front Right", pIDSubsystemFrontRightQuadratureEncoderFrontRight);
        pIDSubsystemFrontRightQuadratureEncoderFrontRight.setDistancePerPulse(1.0);
        pIDSubsystemFrontRightQuadratureEncoderFrontRight.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDSubsystemFrontRightQuadratureEncoderFrontRight.start();
        pIDSubsystemRearRightSpeedControllerRearRight = new Jaguar(1, 4);
	LiveWindow.addActuator("PID Subsystem Rear Right", "Speed Controller Rear Right", (Jaguar) pIDSubsystemRearRightSpeedControllerRearRight);
        
        pIDSubsystemRearRightQuadratureEncoderRearRight = new Encoder(1, 7, 1, 8, false, EncodingType.k4X);
	LiveWindow.addSensor("PID Subsystem Rear Right", "Quadrature Encoder Rear Right", pIDSubsystemRearRightQuadratureEncoderRearRight);
        pIDSubsystemRearRightQuadratureEncoderRearRight.setDistancePerPulse(1.0);
        pIDSubsystemRearRightQuadratureEncoderRearRight.setPIDSourceParameter(PIDSourceParameter.kRate);
        pIDSubsystemRearRightQuadratureEncoderRearRight.start();
        pIDSubsystemArmSpeedControllerArmMotor1 = new Jaguar(1, 7);
	LiveWindow.addActuator("PID Subsystem Arm", "Speed Controller Arm Motor 1", (Jaguar) pIDSubsystemArmSpeedControllerArmMotor1);
        
        pIDSubsystemArmSpeedControllerArmMotor2 = new Jaguar(1, 8);
	LiveWindow.addActuator("PID Subsystem Arm", "Speed Controller Arm Motor 2", (Jaguar) pIDSubsystemArmSpeedControllerArmMotor2);
        
        pIDSubsystemArmEncoderABSArmPosition = new AnalogChannel(1, 2);
	LiveWindow.addSensor("PID Subsystem Arm", "Encoder ABS Arm Position ", pIDSubsystemArmEncoderABSArmPosition);
        
        ballFeederSpeedController1 = new Jaguar(1, 5);
	LiveWindow.addActuator("Ball Feeder", "Speed Controller 1", (Jaguar) ballFeederSpeedController1);
        
        ballFeederSpeedController2 = new Jaguar(1, 6);
	LiveWindow.addActuator("Ball Feeder", "Speed Controller 2", (Jaguar) ballFeederSpeedController2);
        
        pneumaticsBallFeederArmPosition = new DoubleSolenoid(1, 1, 2);      
	
        
        pneumaticsMainCompressor = new Compressor(1, 14, 1, 1);
	
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
